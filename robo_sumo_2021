/*************************************************************/
/* Tema - Robô Sumô                                          */
/* Programação do robô sumô. O robô conta com dois           */
/* sensores de obstáculo Infravermelho que o permite         */
/* permanecer dentro do dojô e um sensor de distância        */
/* ultrassônico que o ajudará a detectar o adversário.       */
/* Links para obtenção da biblioteca by Erick Simões         */
/* http://librarymanager/All#minimalist#Ultrasonic           */
/* https://github.com/ErickSimoes/Ultrasonic                 */
/* Links para obtenção da biblioteca by Adafruit             */
/* http://librarymanager/All#Adafruit#Motor#V1               */
/* https://github.com/adafruit/Adafruit-Motor-Shield-library */
/********************************************************/

/* Inclui a Biblioteca AFMotor para controle do motor.       */
#include <AFMotor.h>
/* Inclui a Biblioteca do sensor ultrassônico.               */
#include <Ultrasonic.h>
/* Definição dos pinos para os sensores.                     */
#define pino_Trig A4
#define pino_Echo A3
#define pino_IR_traseiro 10
#define pino_IR_dianteiro 9
/* Definindo as variáveis utilizadas no código.              */
int distancia;
int sensor_dianteiro;
int sensor_traseiro;

/* Define a distância para ataque. (cm).                     */
int distancia_ataque = 15;
/* Define as velocidades do robô. (0-255).                   */
int vel_padrao = 150;
int vel_ataque = 255;

/* Cria o objeto Sensor para realizar a leitura.             */
Ultrasonic ultrassonico(pino_Trig, pino_Echo);
/* Cria os objetos de controle para os motores               */
/* conectados nas saídas M1 e M4 da Motor Shield.            */
AF_DCMotor motor1(1);
AF_DCMotor motor4(4);

void setup() {
  /* Configura os pinos dos sensores IR como entradas.       */
  pinMode(pino_IR_dianteiro, INPUT);
  pinMode(pino_IR_traseiro, INPUT);
  /* Aguarda 3 segundos para iniciar a disputa.              */
  delay(3000);
  /* Seta a velocidade dos motores.                          */
  motor1.setSpeed(vel_padrao);
  motor4.setSpeed(vel_padrao);
}

void loop() {
  /* Chama a função criada para a leitura dos sensores.      */
  ler_sensores();
  /* Se o sensor dianteiro detectar a linha, faça...         */
  if (sensor_dianteiro == 1) {
    Pare();
    Re();
    Pare();
    Manobre(250);
    Pare();
  }
  /* Se o sensor traseiro detectar a linha, faça...          */
  if (sensor_traseiro == 1) {
    Pare();
    motor1.setSpeed(vel_ataque);
    motor4.setSpeed(vel_ataque);
    Ataque();
    delay(500);
    motor1.setSpeed(vel_padrao);
    motor4.setSpeed(vel_padrao);
  }
  /* Se o sensor ultassônico detectar o adversário, faça...  */
  if (distancia <= distancia_ataque) {
    /*  Enquanto o sensor dianteiro não chegar até a linha,  */
    /* faça...                                               */
    while (sensor_dianteiro == 0) {
      motor1.setSpeed(vel_ataque);
      motor4.setSpeed(vel_ataque);
      Ataque();
      /* Atualiza as informações dos sensores.               */
      ler_sensores();
    }
    motor1.setSpeed(vel_padrao);
    motor4.setSpeed(vel_padrao);
  }
  /* Chama a função que move o robô par frente.         */
  Frente();
}

/* Funções criadas para operação do robô sumô.          */

/* Função fára as leituras dos sensores.                */
void ler_sensores() {
  distancia = ultrassonico.read();
  sensor_dianteiro = digitalRead(pino_IR_dianteiro);
  sensor_traseiro = digitalRead(pino_IR_traseiro);
}

/* Função mover robô para frente.                       */
void Frente() {
  motor1.run(FORWARD);
  motor4.run(FORWARD);
  delay(1);
}

/* Função mover robô para trás.                         */
void Re() {
  motor1.run(BACKWARD);
  motor4.run(BACKWARD);
  delay(500);
}

/* Função parar o robô.                                 */
void Pare() {
  motor1.run(RELEASE);
  motor4.run(RELEASE);
  delay(1);
}

/* Função ataque do robô.                               */
void Ataque() {
  motor1.run(FORWARD);
  motor4.run(FORWARD);
  delay(1);
}

/* Função parar manobrar o robô.                        */
void Manobre(int tempo) {
  if (random(1, 3) == 1) {
    motor1.run(FORWARD);
    motor4.run(BACKWARD);
    delay(1);
  } else {
    motor1.run(FORWARD);
    motor4.run(BACKWARD);
  }
  delay(tempo);
}
